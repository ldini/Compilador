   0  $accept : programa $end

   1  programa : ID '{' conjunto_sentencias_programa '}'
   2           | errores_programa

   3  conjunto_sentencias_programa : conjunto_sentencias_declarativas
   4                               | conjunto_sentencias_ejecutables
   5                               | conjunto_sentencias_declarativas conjunto_sentencias_ejecutables

   6  errores_programa : '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables
   7                   | conjunto_sentencias_declarativas conjunto_sentencias_ejecutables '}'

   8  tipo : INT
   9       | FLOAT
  10       | CADENA

  11  sentencia_declarativa : tipo lista_variables ';'
  12                        | fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'

  13  conjunto_sentencias_declarativas : sentencia_declarativa
  14                                   | conjunto_sentencias_declarativas sentencia_declarativa

  15  conjunto_sentencias_ejecutables : ejecutable
  16                                  | conjunto_sentencias_ejecutables ejecutable

  17  ejecutable : asignacion ';'
  18             | sentencia_if
  19             | sentencia_discard
  20             | sentencia_for
  21             | sentencia_salida

  22  sentencia_discard : discard ID '(' parametro ')' ';'

  23  sentencia_if : IF '(' condicion ')' then bloque_if end_if

  24  bloque_if : sentencia_ejecutable_if
  25            | sentencia_ejecutable_if ELSE sentencia_ejecutable_if

  26  sentencia_ejecutable_if : '{' conjunto_sentencias_ejecutables '}'

  27  etiqueta : ID ':'

  28  sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'
  29                | etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'
  30                | FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'
  31                | FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'

  32  condicion : condicion_AUX
  33            | condicion operador condicion_AUX
  34            | errores_condicion

  35  operador : AND
  36           | OR

  37  condicion_for : ID comparador expresion

  38  errores_condicion : comparador
  39                    | comparador expresion

  40  condicion_AUX : expresion comparador expresion

  41  comparador : '<'
  42             | '>'
  43             | MENOR_IGUAL
  44             | MAYOR_IGUAL
  45             | DISTINTO
  46             | '='

  47  asignacion : ID ASIGNACION expresion ';'
  48             | ID ASIGNACION invocacion_funcion
  49             | ID ASIGNACION sentencia_for

  50  invocacion_funcion : ID '(' ID ')'
  51                     | errores_invocacion_funcion

  52  errores_invocacion_funcion : '(' ID ')'
  53                             | ID '(' ')'
  54                             | '(' ID
  55                             | ID ')'

  56  expresion : expresion '+' termino
  57            | expresion '-' termino
  58            | termino

  59  termino : termino '*' factor
  60          | termino '/' factor
  61          | factor

  62  factor : ID
  63         | constante

  64  constante : CTE_INT
  65            | CTE_FLOAT

  66  parametro : tipo ID
  67            | errores_parametro

  68  lista_parametros : lista_parametros parametro
  69                   | parametro

  70  errores_parametro : ID

  71  lista_variables : ID
  72                  | lista_variables ',' ID
  73                  | errores_lista_variables

  74  errores_lista_variables : lista_variables ','

  75  sentencia_salida : out '(' CADENA ')' ';'

state 0
	$accept : . programa $end  (0)

	fun  shift 1
	ID  shift 2
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	'{'  shift 6
	.  error

	programa  goto 7
	errores_programa  goto 8
	conjunto_sentencias_declarativas  goto 9
	tipo  goto 10
	sentencia_declarativa  goto 11


state 1
	sentencia_declarativa : fun . ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	ID  shift 12
	.  error


state 2
	programa : ID . '{' conjunto_sentencias_programa '}'  (1)

	'{'  shift 13
	.  error


state 3
	tipo : INT .  (8)

	.  reduce 8


state 4
	tipo : FLOAT .  (9)

	.  reduce 9


state 5
	tipo : CADENA .  (10)

	.  reduce 10


state 6
	errores_programa : '{' . conjunto_sentencias_declarativas conjunto_sentencias_ejecutables  (6)

	fun  shift 1
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_declarativas  goto 14
	tipo  goto 10
	sentencia_declarativa  goto 11


state 7
	$accept : programa . $end  (0)

	$end  accept


state 8
	programa : errores_programa .  (2)

	.  reduce 2


state 9
	errores_programa : conjunto_sentencias_declarativas . conjunto_sentencias_ejecutables '}'  (7)
	conjunto_sentencias_declarativas : conjunto_sentencias_declarativas . sentencia_declarativa  (14)

	IF  shift 15
	out  shift 16
	fun  shift 1
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_ejecutables  goto 20
	tipo  goto 10
	sentencia_declarativa  goto 21
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 10
	sentencia_declarativa : tipo . lista_variables ';'  (11)

	ID  shift 29
	.  error

	lista_variables  goto 30
	errores_lista_variables  goto 31


state 11
	conjunto_sentencias_declarativas : sentencia_declarativa .  (13)

	.  reduce 13


state 12
	sentencia_declarativa : fun ID . '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	'('  shift 32
	.  error


state 13
	programa : ID '{' . conjunto_sentencias_programa '}'  (1)

	IF  shift 15
	out  shift 16
	fun  shift 1
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_programa  goto 33
	conjunto_sentencias_declarativas  goto 34
	conjunto_sentencias_ejecutables  goto 35
	tipo  goto 10
	sentencia_declarativa  goto 11
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 14
	errores_programa : '{' conjunto_sentencias_declarativas . conjunto_sentencias_ejecutables  (6)
	conjunto_sentencias_declarativas : conjunto_sentencias_declarativas . sentencia_declarativa  (14)

	IF  shift 15
	out  shift 16
	fun  shift 1
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_ejecutables  goto 36
	tipo  goto 10
	sentencia_declarativa  goto 21
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 15
	sentencia_if : IF . '(' condicion ')' then bloque_if end_if  (23)

	'('  shift 37
	.  error


state 16
	sentencia_salida : out . '(' CADENA ')' ';'  (75)

	'('  shift 38
	.  error


state 17
	sentencia_discard : discard . ID '(' parametro ')' ';'  (22)

	ID  shift 39
	.  error


state 18
	sentencia_for : FOR . '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR . '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (31)

	'('  shift 40
	.  error


state 19
	etiqueta : ID . ':'  (27)
	asignacion : ID . ASIGNACION expresion ';'  (47)
	asignacion : ID . ASIGNACION invocacion_funcion  (48)
	asignacion : ID . ASIGNACION sentencia_for  (49)

	ASIGNACION  shift 41
	':'  shift 42
	.  error


state 20
	errores_programa : conjunto_sentencias_declarativas conjunto_sentencias_ejecutables . '}'  (7)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	'}'  shift 43
	.  error

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 21
	conjunto_sentencias_declarativas : conjunto_sentencias_declarativas sentencia_declarativa .  (14)

	.  reduce 14


state 22
	conjunto_sentencias_ejecutables : ejecutable .  (15)

	.  reduce 15


state 23
	ejecutable : asignacion . ';'  (17)

	';'  shift 45
	.  error


state 24
	ejecutable : sentencia_if .  (18)

	.  reduce 18


state 25
	ejecutable : sentencia_discard .  (19)

	.  reduce 19


state 26
	ejecutable : sentencia_for .  (20)

	.  reduce 20


state 27
	ejecutable : sentencia_salida .  (21)

	.  reduce 21


state 28
	sentencia_for : etiqueta . FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta . FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	FOR  shift 46
	.  error


state 29
	lista_variables : ID .  (71)

	.  reduce 71


state 30
	sentencia_declarativa : tipo lista_variables . ';'  (11)
	lista_variables : lista_variables . ',' ID  (72)
	errores_lista_variables : lista_variables . ','  (74)

	';'  shift 47
	','  shift 48
	.  error


state 31
	lista_variables : errores_lista_variables .  (73)

	.  reduce 73


state 32
	sentencia_declarativa : fun ID '(' . lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	ID  shift 49
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	tipo  goto 50
	lista_parametros  goto 51
	parametro  goto 52
	errores_parametro  goto 53


state 33
	programa : ID '{' conjunto_sentencias_programa . '}'  (1)

	'}'  shift 54
	.  error


state 34
	conjunto_sentencias_programa : conjunto_sentencias_declarativas .  (3)
	conjunto_sentencias_programa : conjunto_sentencias_declarativas . conjunto_sentencias_ejecutables  (5)
	conjunto_sentencias_declarativas : conjunto_sentencias_declarativas . sentencia_declarativa  (14)

	IF  shift 15
	out  shift 16
	fun  shift 1
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	'}'  reduce 3

	conjunto_sentencias_ejecutables  goto 55
	tipo  goto 10
	sentencia_declarativa  goto 21
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 35
	conjunto_sentencias_programa : conjunto_sentencias_ejecutables .  (4)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	'}'  reduce 4

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 36
	errores_programa : '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables .  (6)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	$end  reduce 6

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 37
	sentencia_if : IF '(' . condicion ')' then bloque_if end_if  (23)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	MAYOR_IGUAL  shift 59
	MENOR_IGUAL  shift 60
	DISTINTO  shift 61
	'<'  shift 62
	'>'  shift 63
	'='  shift 64
	.  error

	expresion  goto 65
	condicion  goto 66
	constante  goto 67
	condicion_AUX  goto 68
	errores_condicion  goto 69
	comparador  goto 70
	termino  goto 71
	factor  goto 72


state 38
	sentencia_salida : out '(' . CADENA ')' ';'  (75)

	CADENA  shift 73
	.  error


state 39
	sentencia_discard : discard ID . '(' parametro ')' ';'  (22)

	'('  shift 74
	.  error


state 40
	sentencia_for : FOR '(' . asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' . asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (31)

	ID  shift 75
	.  error

	asignacion  goto 76


state 41
	asignacion : ID ASIGNACION . expresion ';'  (47)
	asignacion : ID ASIGNACION . invocacion_funcion  (48)
	asignacion : ID ASIGNACION . sentencia_for  (49)

	FOR  shift 18
	ID  shift 77
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	'('  shift 78
	.  error

	expresion  goto 79
	sentencia_for  goto 80
	etiqueta  goto 28
	constante  goto 67
	invocacion_funcion  goto 81
	errores_invocacion_funcion  goto 82
	termino  goto 71
	factor  goto 72


state 42
	etiqueta : ID ':' .  (27)

	.  reduce 27


state 43
	errores_programa : conjunto_sentencias_declarativas conjunto_sentencias_ejecutables '}' .  (7)

	.  reduce 7


state 44
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables ejecutable .  (16)

	.  reduce 16


state 45
	ejecutable : asignacion ';' .  (17)

	.  reduce 17


state 46
	sentencia_for : etiqueta FOR . '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR . '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	'('  shift 83
	.  error


state 47
	sentencia_declarativa : tipo lista_variables ';' .  (11)

	.  reduce 11


state 48
	lista_variables : lista_variables ',' . ID  (72)
	errores_lista_variables : lista_variables ',' .  (74)

	ID  shift 84
	';'  reduce 74
	','  reduce 74


state 49
	errores_parametro : ID .  (70)

	.  reduce 70


state 50
	parametro : tipo . ID  (66)

	ID  shift 85
	.  error


state 51
	sentencia_declarativa : fun ID '(' lista_parametros . ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)
	lista_parametros : lista_parametros . parametro  (68)

	ID  shift 49
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	')'  shift 86
	.  error

	tipo  goto 50
	parametro  goto 87
	errores_parametro  goto 53


state 52
	lista_parametros : parametro .  (69)

	.  reduce 69


state 53
	parametro : errores_parametro .  (67)

	.  reduce 67


state 54
	programa : ID '{' conjunto_sentencias_programa '}' .  (1)

	.  reduce 1


state 55
	conjunto_sentencias_programa : conjunto_sentencias_declarativas conjunto_sentencias_ejecutables .  (5)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	'}'  reduce 5

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 56
	factor : ID .  (62)

	.  reduce 62


state 57
	constante : CTE_INT .  (64)

	.  reduce 64


state 58
	constante : CTE_FLOAT .  (65)

	.  reduce 65


state 59
	comparador : MAYOR_IGUAL .  (44)

	.  reduce 44


state 60
	comparador : MENOR_IGUAL .  (43)

	.  reduce 43


state 61
	comparador : DISTINTO .  (45)

	.  reduce 45


state 62
	comparador : '<' .  (41)

	.  reduce 41


state 63
	comparador : '>' .  (42)

	.  reduce 42


state 64
	comparador : '=' .  (46)

	.  reduce 46


state 65
	condicion_AUX : expresion . comparador expresion  (40)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	MAYOR_IGUAL  shift 59
	MENOR_IGUAL  shift 60
	DISTINTO  shift 61
	'<'  shift 62
	'>'  shift 63
	'='  shift 64
	'+'  shift 88
	'-'  shift 89
	.  error

	comparador  goto 90


state 66
	sentencia_if : IF '(' condicion . ')' then bloque_if end_if  (23)
	condicion : condicion . operador condicion_AUX  (33)

	AND  shift 91
	OR  shift 92
	')'  shift 93
	.  error

	operador  goto 94


state 67
	factor : constante .  (63)

	.  reduce 63


state 68
	condicion : condicion_AUX .  (32)

	.  reduce 32


state 69
	condicion : errores_condicion .  (34)

	.  reduce 34


state 70
	errores_condicion : comparador .  (38)
	errores_condicion : comparador . expresion  (39)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	AND  reduce 38
	OR  reduce 38
	')'  reduce 38

	expresion  goto 95
	constante  goto 67
	termino  goto 71
	factor  goto 72


state 71
	expresion : termino .  (58)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 96
	'/'  shift 97
	AND  reduce 58
	OR  reduce 58
	MAYOR_IGUAL  reduce 58
	MENOR_IGUAL  reduce 58
	DISTINTO  reduce 58
	';'  reduce 58
	')'  reduce 58
	'<'  reduce 58
	'>'  reduce 58
	'='  reduce 58
	'+'  reduce 58
	'-'  reduce 58


state 72
	termino : factor .  (61)

	.  reduce 61


state 73
	sentencia_salida : out '(' CADENA . ')' ';'  (75)

	')'  shift 98
	.  error


state 74
	sentencia_discard : discard ID '(' . parametro ')' ';'  (22)

	ID  shift 49
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	tipo  goto 50
	parametro  goto 99
	errores_parametro  goto 53


state 75
	asignacion : ID . ASIGNACION expresion ';'  (47)
	asignacion : ID . ASIGNACION invocacion_funcion  (48)
	asignacion : ID . ASIGNACION sentencia_for  (49)

	ASIGNACION  shift 41
	.  error


state 76
	sentencia_for : FOR '(' asignacion . ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion . ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (31)

	';'  shift 100
	.  error


state 77
	etiqueta : ID . ':'  (27)
	invocacion_funcion : ID . '(' ID ')'  (50)
	errores_invocacion_funcion : ID . '(' ')'  (53)
	errores_invocacion_funcion : ID . ')'  (55)
	factor : ID .  (62)

	'('  shift 101
	')'  shift 102
	':'  shift 42
	';'  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'*'  reduce 62
	'/'  reduce 62


state 78
	errores_invocacion_funcion : '(' . ID ')'  (52)
	errores_invocacion_funcion : '(' . ID  (54)

	ID  shift 103
	.  error


state 79
	asignacion : ID ASIGNACION expresion . ';'  (47)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	';'  shift 104
	'+'  shift 88
	'-'  shift 89
	.  error


state 80
	asignacion : ID ASIGNACION sentencia_for .  (49)

	.  reduce 49


state 81
	asignacion : ID ASIGNACION invocacion_funcion .  (48)

	.  reduce 48


state 82
	invocacion_funcion : errores_invocacion_funcion .  (51)

	.  reduce 51


state 83
	sentencia_for : etiqueta FOR '(' . asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' . asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	ID  shift 75
	.  error

	asignacion  goto 105


state 84
	lista_variables : lista_variables ',' ID .  (72)

	.  reduce 72


state 85
	parametro : tipo ID .  (66)

	.  reduce 66


state 86
	sentencia_declarativa : fun ID '(' lista_parametros ')' . ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	':'  shift 106
	.  error


state 87
	lista_parametros : lista_parametros parametro .  (68)

	.  reduce 68


state 88
	expresion : expresion '+' . termino  (56)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 67
	termino  goto 107
	factor  goto 72


state 89
	expresion : expresion '-' . termino  (57)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 67
	termino  goto 108
	factor  goto 72


state 90
	condicion_AUX : expresion comparador . expresion  (40)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	expresion  goto 109
	constante  goto 67
	termino  goto 71
	factor  goto 72


state 91
	operador : AND .  (35)

	.  reduce 35


state 92
	operador : OR .  (36)

	.  reduce 36


state 93
	sentencia_if : IF '(' condicion ')' . then bloque_if end_if  (23)

	then  shift 110
	.  error


state 94
	condicion : condicion operador . condicion_AUX  (33)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	expresion  goto 65
	constante  goto 67
	condicion_AUX  goto 111
	termino  goto 71
	factor  goto 72


state 95
	errores_condicion : comparador expresion .  (39)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 88
	'-'  shift 89
	AND  reduce 39
	OR  reduce 39
	')'  reduce 39


state 96
	termino : termino '*' . factor  (59)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 67
	factor  goto 112


state 97
	termino : termino '/' . factor  (60)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 67
	factor  goto 113


state 98
	sentencia_salida : out '(' CADENA ')' . ';'  (75)

	';'  shift 114
	.  error


state 99
	sentencia_discard : discard ID '(' parametro . ')' ';'  (22)

	')'  shift 115
	.  error


state 100
	sentencia_for : FOR '(' asignacion ';' . condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' . condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (31)

	ID  shift 116
	.  error

	condicion_for  goto 117


state 101
	invocacion_funcion : ID '(' . ID ')'  (50)
	errores_invocacion_funcion : ID '(' . ')'  (53)

	ID  shift 118
	')'  shift 119
	.  error


state 102
	errores_invocacion_funcion : ID ')' .  (55)

	.  reduce 55


state 103
	errores_invocacion_funcion : '(' ID . ')'  (52)
	errores_invocacion_funcion : '(' ID .  (54)

	')'  shift 120
	';'  reduce 54


state 104
	asignacion : ID ASIGNACION expresion ';' .  (47)

	.  reduce 47


state 105
	sentencia_for : etiqueta FOR '(' asignacion . ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion . ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	';'  shift 121
	.  error


state 106
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' . tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	tipo  goto 122


state 107
	expresion : expresion '+' termino .  (56)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 96
	'/'  shift 97
	AND  reduce 56
	OR  reduce 56
	MAYOR_IGUAL  reduce 56
	MENOR_IGUAL  reduce 56
	DISTINTO  reduce 56
	';'  reduce 56
	')'  reduce 56
	'<'  reduce 56
	'>'  reduce 56
	'='  reduce 56
	'+'  reduce 56
	'-'  reduce 56


state 108
	expresion : expresion '-' termino .  (57)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 96
	'/'  shift 97
	AND  reduce 57
	OR  reduce 57
	MAYOR_IGUAL  reduce 57
	MENOR_IGUAL  reduce 57
	DISTINTO  reduce 57
	';'  reduce 57
	')'  reduce 57
	'<'  reduce 57
	'>'  reduce 57
	'='  reduce 57
	'+'  reduce 57
	'-'  reduce 57


state 109
	condicion_AUX : expresion comparador expresion .  (40)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 88
	'-'  shift 89
	AND  reduce 40
	OR  reduce 40
	')'  reduce 40


state 110
	sentencia_if : IF '(' condicion ')' then . bloque_if end_if  (23)

	'{'  shift 123
	.  error

	bloque_if  goto 124
	sentencia_ejecutable_if  goto 125


state 111
	condicion : condicion operador condicion_AUX .  (33)

	.  reduce 33


state 112
	termino : termino '*' factor .  (59)

	.  reduce 59


state 113
	termino : termino '/' factor .  (60)

	.  reduce 60


state 114
	sentencia_salida : out '(' CADENA ')' ';' .  (75)

	.  reduce 75


state 115
	sentencia_discard : discard ID '(' parametro ')' . ';'  (22)

	';'  shift 126
	.  error


state 116
	condicion_for : ID . comparador expresion  (37)

	MAYOR_IGUAL  shift 59
	MENOR_IGUAL  shift 60
	DISTINTO  shift 61
	'<'  shift 62
	'>'  shift 63
	'='  shift 64
	.  error

	comparador  goto 127


state 117
	sentencia_for : FOR '(' asignacion ';' condicion_for . ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' condicion_for . ';' constante ')' conjunto_sentencias_ejecutables ';'  (31)

	';'  shift 128
	.  error


state 118
	invocacion_funcion : ID '(' ID . ')'  (50)

	')'  shift 129
	.  error


state 119
	errores_invocacion_funcion : ID '(' ')' .  (53)

	.  reduce 53


state 120
	errores_invocacion_funcion : '(' ID ')' .  (52)

	.  reduce 52


state 121
	sentencia_for : etiqueta FOR '(' asignacion ';' . condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' . condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	ID  shift 116
	.  error

	condicion_for  goto 130


state 122
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo . '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	'{'  shift 131
	.  error


state 123
	sentencia_ejecutable_if : '{' . conjunto_sentencias_ejecutables '}'  (26)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	.  error

	conjunto_sentencias_ejecutables  goto 132
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 124
	sentencia_if : IF '(' condicion ')' then bloque_if . end_if  (23)

	end_if  shift 133
	.  error


state 125
	bloque_if : sentencia_ejecutable_if .  (24)
	bloque_if : sentencia_ejecutable_if . ELSE sentencia_ejecutable_if  (25)

	ELSE  shift 134
	end_if  reduce 24


state 126
	sentencia_discard : discard ID '(' parametro ')' ';' .  (22)

	.  reduce 22


state 127
	condicion_for : ID comparador . expresion  (37)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	expresion  goto 135
	constante  goto 67
	termino  goto 71
	factor  goto 72


state 128
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' . constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' . constante ')' conjunto_sentencias_ejecutables ';'  (31)

	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 136


state 129
	invocacion_funcion : ID '(' ID ')' .  (50)

	.  reduce 50


state 130
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for . ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for . ';' constante ')' conjunto_sentencias_ejecutables ';'  (29)

	';'  shift 137
	.  error


state 131
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' . conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)

	fun  shift 1
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_declarativas  goto 138
	tipo  goto 10
	sentencia_declarativa  goto 11


state 132
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)
	sentencia_ejecutable_if : '{' conjunto_sentencias_ejecutables . '}'  (26)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	'}'  shift 139
	.  error

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 133
	sentencia_if : IF '(' condicion ')' then bloque_if end_if .  (23)

	.  reduce 23


state 134
	bloque_if : sentencia_ejecutable_if ELSE . sentencia_ejecutable_if  (25)

	'{'  shift 123
	.  error

	sentencia_ejecutable_if  goto 140


state 135
	condicion_for : ID comparador expresion .  (37)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 88
	'-'  shift 89
	';'  reduce 37


state 136
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante . ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante . ')' conjunto_sentencias_ejecutables ';'  (31)

	')'  shift 141
	.  error


state 137
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' . constante ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' . constante ')' conjunto_sentencias_ejecutables ';'  (29)

	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	constante  goto 142


state 138
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas . conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';'  (12)
	conjunto_sentencias_declarativas : conjunto_sentencias_declarativas . sentencia_declarativa  (14)

	IF  shift 15
	out  shift 16
	fun  shift 1
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	INT  shift 3
	FLOAT  shift 4
	CADENA  shift 5
	.  error

	conjunto_sentencias_ejecutables  goto 143
	tipo  goto 10
	sentencia_declarativa  goto 21
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 139
	sentencia_ejecutable_if : '{' conjunto_sentencias_ejecutables '}' .  (26)

	.  reduce 26


state 140
	bloque_if : sentencia_ejecutable_if ELSE sentencia_ejecutable_if .  (25)

	.  reduce 25


state 141
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' . conjunto_sentencias_ejecutables BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' . conjunto_sentencias_ejecutables ';'  (31)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	.  error

	conjunto_sentencias_ejecutables  goto 144
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 142
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante . ')' conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante . ')' conjunto_sentencias_ejecutables ';'  (29)

	')'  shift 145
	.  error


state 143
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables . RETURN '(' expresion ')' '}' ';'  (12)
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)

	IF  shift 15
	out  shift 16
	RETURN  shift 146
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	.  error

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 144
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables . BREAK ';' ';'  (30)
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables . ';'  (31)

	IF  shift 15
	out  shift 16
	BREAK  shift 147
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	';'  shift 148
	.  error

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 145
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' . conjunto_sentencias_ejecutables BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' . conjunto_sentencias_ejecutables ';'  (29)

	IF  shift 15
	out  shift 16
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	.  error

	conjunto_sentencias_ejecutables  goto 149
	ejecutable  goto 22
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 146
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN . '(' expresion ')' '}' ';'  (12)

	'('  shift 150
	.  error


state 147
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK . ';' ';'  (30)

	';'  shift 151
	.  error


state 148
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';' .  (31)

	.  reduce 31


state 149
	conjunto_sentencias_ejecutables : conjunto_sentencias_ejecutables . ejecutable  (16)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables . BREAK ';' ';'  (28)
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables . ';'  (29)

	IF  shift 15
	out  shift 16
	BREAK  shift 152
	discard  shift 17
	FOR  shift 18
	ID  shift 19
	';'  shift 153
	.  error

	ejecutable  goto 44
	asignacion  goto 23
	sentencia_if  goto 24
	sentencia_discard  goto 25
	sentencia_for  goto 26
	sentencia_salida  goto 27
	etiqueta  goto 28


state 150
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' . expresion ')' '}' ';'  (12)

	ID  shift 56
	CTE_INT  shift 57
	CTE_FLOAT  shift 58
	.  error

	expresion  goto 154
	constante  goto 67
	termino  goto 71
	factor  goto 72


state 151
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' . ';'  (30)

	';'  shift 155
	.  error


state 152
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK . ';' ';'  (28)

	';'  shift 156
	.  error


state 153
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables ';' .  (29)

	.  reduce 29


state 154
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion . ')' '}' ';'  (12)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	')'  shift 157
	'+'  shift 88
	'-'  shift 89
	.  error


state 155
	sentencia_for : FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';' .  (30)

	.  reduce 30


state 156
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' . ';'  (28)

	';'  shift 158
	.  error


state 157
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' . '}' ';'  (12)

	'}'  shift 159
	.  error


state 158
	sentencia_for : etiqueta FOR '(' asignacion ';' condicion_for ';' constante ')' conjunto_sentencias_ejecutables BREAK ';' ';' .  (28)

	.  reduce 28


state 159
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' . ';'  (12)

	';'  shift 160
	.  error


state 160
	sentencia_declarativa : fun ID '(' lista_parametros ')' ':' tipo '{' conjunto_sentencias_declarativas conjunto_sentencias_ejecutables RETURN '(' expresion ')' '}' ';' .  (12)

	.  reduce 12


39 terminals, 34 nonterminals
76 grammar rules, 161 states
